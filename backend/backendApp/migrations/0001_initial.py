# Generated by Django 5.2.7 on 2025-10-10 20:50

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Player",
            fields=[
                ("player_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
                ("position", models.CharField(max_length=10)),
                ("team", models.CharField(max_length=50)),
                (
                    "height",
                    models.FloatField(
                        blank=True, help_text="Height in inches", null=True
                    ),
                ),
                (
                    "weight",
                    models.FloatField(
                        blank=True, help_text="Weight in pounds", null=True
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Prediction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("season", models.CharField(max_length=10)),
                (
                    "model_version",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("predicted_points", models.FloatField(blank=True, null=True)),
                ("predicted_threep", models.FloatField(blank=True, null=True)),
                ("predicted_rebounds", models.FloatField(blank=True, null=True)),
                ("predicted_assists", models.FloatField(blank=True, null=True)),
                ("predicted_blocks", models.FloatField(blank=True, null=True)),
                ("predicted_steals", models.FloatField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="predictions",
                        to="backendApp.player",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SeasonStat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("season", models.CharField(max_length=10)),
                ("team", models.CharField(blank=True, max_length=10, null=True)),
                ("games_played", models.IntegerField(blank=True, null=True)),
                ("minutes", models.FloatField(blank=True, null=True)),
                ("fg_percent", models.FloatField(blank=True, null=True)),
                ("threep_percent", models.FloatField(blank=True, null=True)),
                ("ft_percent", models.FloatField(blank=True, null=True)),
                ("rebounds", models.FloatField(blank=True, null=True)),
                ("assists", models.FloatField(blank=True, null=True)),
                ("steals", models.FloatField(blank=True, null=True)),
                ("blocks", models.FloatField(blank=True, null=True)),
                ("turnovers", models.FloatField(blank=True, null=True)),
                ("personal_fouls", models.FloatField(blank=True, null=True)),
                ("points", models.FloatField(blank=True, null=True)),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="season_stats",
                        to="backendApp.player",
                    ),
                ),
            ],
            options={
                "ordering": ["player", "season"],
                "unique_together": {("player", "season")},
            },
        ),
    ]
